name: Check Linux Build
on:
  push:
    branches-ignore:
      - main

concurrency:
  group: check-build-lin-${{ github.ref }}
  cancel-in-progress: true

env:
  # See https://github.com/git-lfs/git-lfs/issues/5749
  GIT_CLONE_PROTECTION_ACTIVE: 'false'

jobs:
  build:
    name: Build - ${{ matrix.config.os }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - os: ubuntu-24.04
            name: "Ubuntu 24.04"
    steps:
      - name: Setup Pragma
        uses: Silverlan/pragma/github_actions/setup@main
        with:
          branch: ${{ github.ref_name }}
          clone_url: "https://github.com/${{ github.repository }}.git"

      # This is a temporary workaround until gcc 14.2 is available
      # with a fix for https://gcc.gnu.org/git/gitweb.cgi?p=gcc.git;h=e909d360dfaeafa9f45eda2461a1bedffac99ac2 
      - name: Workaround for libstdc++ Bug
        shell: bash
        run: |
          sudo add-apt-repository ppa:ubuntu-toolchain-r/test
          sudo apt update
          sudo apt install gcc-14 g++-14
          sudo sed -i 's/\+\+this;/\+\+\*this;/g' /usr/include/c++/14/bits/unicode.h

      - name: Build Pragma
        uses: ./pragma/github_actions/build
        id: build-pragma
        with:
          build-args: "--with-pfm --with-all-pfm-modules --with-vr --with-networking --with-lua-debugger=0 --with-swiftshader"

      #- name: Run Tests
      #  uses: ./pragma/github_actions/run_common_tests@main
      #  with:
      #    working-directory: "${{ steps.build-pragma.outputs.install-dir }}"
      #    import-tests-token: ${{ secrets.PRAGMA_TESTS_IMPORT_TOKEN }}

      #- name: Handle Error
      #  uses: Silverlan/common_actions/action_handle_error@main
      #  if: failure()
      #  with:
      #    timeout-minutes: 15

      - name: Upload Debug Artifacts
        if: ${{ !cancelled() }}
        uses: ./pragma/github_actions/upload_debug_artifacts
        with:
          build-dir: '${{ steps.build-pragma.outputs.build-dir }}'
          deps-dir: '${{ steps.build-pragma.outputs.deps-dir }}'
          install-dir: '${{ steps.build-pragma.outputs.install-dir }}'
