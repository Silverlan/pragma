name: Build Windows
on:
  push:
    branches: [ main, master, actions ]
  pull_request:
    branches: [ main, master, actions ]

concurrency:
  group: environment-win-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Build - ${{ matrix.config.os }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - os: windows-latest
            name: "Windows x64 MSVC"
            artifact: "Windows-MSVC.tar.xz"
            build_type: "RelWithDebInfo"
            environment_script: "C:/Program Files (x86)/Microsoft Visual Studio/2019/Enterprise/VC/Auxiliary/Build/vcvars64.bat"
            cc: "cl"
            cxx: "cl"
            archiver: "7z a"
            generators: "Visual Studio 17 2022"
            build_dir: 'build'
    steps:
      - name: Setup Pragma
        uses: Silverlan/pragma/github_actions/setup@master

      - name: Build Pragma
        uses: Silverlan/pragma/github_actions/build@master
        id: build-pragma
        with:
          build-args: "--with-pfm --with-all-pfm-modules --with-vr --vcvars \"C:/Program Files/Microsoft Visual Studio/2022/Enterprise/VC/Auxiliary/Build/vcvars64.bat\""

      - name: Create Release Archive
        shell: bash
        run: |
          curDir="$PWD"
          # Add info file
          cd "${{ steps.build-pragma.outputs.install-dir }}"
          echo -e "ref: $GITHUB_REF \ncommit: $GITHUB_SHA\nbuild: $(date +"%Y-%m-%dT%H:%M:%SZ")" \
          > ./git_info.txt
          cd "$curDir"

          7z a pragma.zip "${{ steps.build-pragma.outputs.install-dir }}/**"
          
      - name: Generate nightly tag description
        shell: bash
        run:   |
          curDate=$(date -u '+%Y-%m-%d %H:%M:%S %Z')
          printf "This is an auto-generated pre-release, built from the latest version of the source code.\nIt includes all files necessary to run Pragma, as well as the latest version of the Pragma Filmmaker, however functionality and stability are **not** guaranteed.\n\nLatest release date: $curDate" > tag_text.txt

      - name: Update nightly tag description
        uses: softprops/action-gh-release@v0.1.14
        with:
          body_path: tag_text.txt
          tag_name: nightly
          prerelease: true

      - name: Update nightly release
        uses: pyTooling/Actions/releaser/composite@main
        with:
          tag: nightly
          token: ${{ secrets.GITHUB_TOKEN }}
          files: "pragma.zip"
          
      - name: Handle Error
        uses: Silverlan/common_actions/action_handle_error@main
        if: failure()
