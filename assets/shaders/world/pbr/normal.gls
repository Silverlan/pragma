#ifndef F_FS_PBR_NORMAL_GLS
#define F_FS_PBR_NORMAL_GLS

#include "material.gls"
#include "/modules/sh_vertex_data.gls"
#include "/modules/sh_entity_info.gls"

vec3 get_normal_from_map(vec2 texCoords)
{
	if(use_normal_map())
	{
		vec3 tangentNormal = texture(u_normalMap,texCoords).xyz *2.0 -1.0;


		vec3 Q1 = dFdx(fs_in.vert_pos_ws.xyz);
		vec3 Q2 = dFdy(fs_in.vert_pos_ws.xyz);
		vec2 st1 = dFdx(texCoords);
		vec2 st2 = dFdy(texCoords);

		vec3 N = normalize(fs_in.vert_normal);
		vec3 T = Q1 *st2.t -Q2 *st1.t;
		T = normalize((get_model_matrix() *vec4(T,0)).xyz);
		vec3 B = -normalize(cross(N,T));
		mat3 TBN = mat3(T,B,N); // TODO: use fs_in.TBN;

		return normalize(TBN *tangentNormal);
	}
	return fs_in.vert_normal;
}

#endif
