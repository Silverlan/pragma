function(pr_add_module_reference TARGET_NAME MODULE)
	if(WIN32)
		set(PRETTYNAME ${IDENTIFIER})
		set(ARGV ${ARGN})
		list(LENGTH ARGV ARGC)
		if(ARGC GREATER 0)
			list(GET ARGV 0 PRETTYNAME)
		endif()
		string(TOUPPER ${IDENTIFIER} UIDENTIFIER)

		set(DEFAULT_MODULE "")
		set(DEPENDENCY_${UIDENTIFIER}_MODULE ${DEFAULT_MODULE} CACHE PATH "Path to ${PRETTYNAME} module file.")

		get_property(MODULE_LIST TARGET ${TARGET_NAME} PROPERTY ${TARGET_NAME}_MODULE_LIST)
		list(APPEND MODULE_LIST "${DEPENDENCY_${UIDENTIFIER}_MODULE}")
		set_property(TARGET ${TARGET_NAME} PROPERTY ${TARGET_NAME}_MODULE_LIST "${MODULE_LIST}")

		message("[PR] Linking module \"${DEPENDENCY_${UIDENTIFIER}_MODULE}\" (${MODULE}) to target ${TARGET_NAME}")
	endif()
endfunction()

function(pr_add_module_references TARGET_NAME MODULE_LIST)
	if(WIN32)
		message("[PR] Adding module references to target ${TARGET_NAME}: ${MODULE_LIST}")
		string(REPLACE ";" "\\\;" MODULE_LIST_STR "${MODULE_LIST}")
		target_compile_options(${TARGET_NAME} PRIVATE /reference ${MODULE_LIST_STR})
	endif()
endfunction()

function(pr_add_include_dir TARGET_NAME IDENTIFIER)
    set(PRETTYNAME ${IDENTIFIER})
    set(ARGV ${ARGN})
    list(LENGTH ARGV ARGC)
    if(ARGC GREATER 0)
        list(GET ARGV 0 PRETTYNAME)
    endif()
    string(TOUPPER ${IDENTIFIER} UIDENTIFIER)

    set(DEFAULT_DIR "")
    set(DEPENDENCY_${UIDENTIFIER}_INCLUDE ${DEFAULT_DIR} CACHE PATH "Path to ${PRETTYNAME} include directory.")
	
	message("[PR] Adding include directory \"${DEPENDENCY_${UIDENTIFIER}_INCLUDE}\" to target ${TARGET_NAME}")
    target_include_directories(${TARGET_NAME} PRIVATE ${DEPENDENCY_${UIDENTIFIER}_INCLUDE})
endfunction()

function(pr_link_library TARGET_NAME IDENTIFIER)
    set(PRETTYNAME ${IDENTIFIER})
    set(ARGV ${ARGN})
    list(LENGTH ARGV ARGC)
    if(ARGC GREATER 0)
        list(GET ARGV 0 PRETTYNAME)
    endif()
    string(TOUPPER ${IDENTIFIER} UIDENTIFIER)

    set(DEPENDENCY_${UIDENTIFIER}_LIBRARY "" CACHE FILEPATH "Path to ${PRETTYNAME} library.")
	message("[PR] Linking library \"${DEPENDENCY_${UIDENTIFIER}_LIBRARY}\" to target ${TARGET_NAME}")
    target_link_libraries(${TARGET_NAME} PRIVATE ${DEPENDENCY_${UIDENTIFIER}_LIBRARY})
endfunction()

function(pr_include_and_link_library TARGET_NAME IDENTIFIER)
    set(PRETTYNAME ${IDENTIFIER})
    set(ARGV ${ARGN})
    list(LENGTH ARGV ARGC)
    if(ARGC GREATER 0)
        list(GET ARGV 0 PRETTYNAME)
    endif()
    string(TOUPPER ${IDENTIFIER} UIDENTIFIER)

    set(DEFAULT_DIR "")
    set(DEPENDENCY_${UIDENTIFIER}_INCLUDE ${DEFAULT_DIR} CACHE PATH "Path to ${PRETTYNAME} include directory.")
	message("[PR] Adding include directory \"${DEPENDENCY_${UIDENTIFIER}_INCLUDE}\" to target ${TARGET_NAME}")
    target_include_directories(${TARGET_NAME} PRIVATE ${DEPENDENCY_${UIDENTIFIER}_INCLUDE})

    set(DEPENDENCY_${UIDENTIFIER}_LIBRARY "" CACHE FILEPATH "Path to ${PRETTYNAME} library.")
	message("[PR] Linking library \"${DEPENDENCY_${UIDENTIFIER}_LIBRARY}\" to target ${TARGET_NAME}")
    target_link_libraries(${TARGET_NAME} PRIVATE ${DEPENDENCY_${UIDENTIFIER}_LIBRARY})
endfunction()

function(pr_add_dependency TARGET_NAME IDENTIFIER DEPENDENCY_TYPE)
    pr_add_include_dir(${TARGET_NAME} ${IDENTIFIER})

    if(DEPENDENCY_TYPE STREQUAL "LIBRARY" OR DEPENDENCY_TYPE STREQUAL "MODULE")
        set(DEPENDENCY_TARGET_NAME ${ARGV4})
        if(NOT DEFINED DEPENDENCY_TARGET_NAME)
            set(DEPENDENCY_TARGET_NAME ${TARGET_NAME})
        endif()

        pr_link_library(${TARGET_NAME} ${IDENTIFIER})

        add_dependencies(${TARGET_NAME} ${DEPENDENCY_TARGET_NAME})
    endif()

    if(DEPENDENCY_TYPE STREQUAL "MODULE")
        pr_add_module_reference(${TARGET_NAME} ${IDENTIFIER})
    endif()
endfunction()
