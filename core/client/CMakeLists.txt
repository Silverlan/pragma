include("../../CMakeShared.txt")

link_external_library(shared)
link_external_library(prosper)
link_external_library(glfw)
link_external_library(iglfw)
link_external_library(wgui)
link_external_library(alsoundsystem)
link_external_library(materialsystem)
link_external_library(cmaterialsystem)
link_external_library(util_sound)
link_external_library(util_pad)
link_external_library(util_bsp)
link_external_library(util_zip)
link_external_library(7zpp)
link_external_library(util_versioned_archive)
link_external_library(util_timeline_scene)
link_external_library(util_source_script)
link_external_library(util_image)
link_external_library(recast)
link_external_library(detour)
link_external_library(libvorbis)
link_external_library(libogg)
link_external_library(libnoise)
link_external_library(wms_shared)
link_external_library(RectangleBinPack)
link_external_library(rapidxml)
link_external_library(bzip2)
link_external_library(libzip)
link_external_library(libvorbis)
link_external_library(util_formatted_text)
# link_external_library(assimp)
link_external_library(util_vmf)
link_external_library(util_udm)
link_external_library(panima)
link_external_library(spdlog)
if(CONFIG_ENABLE_VTF_SUPPORT)
	link_external_library(VTFLib)
endif()

add_external_library(luajit)
add_external_library(clientmanager)
add_external_library(networkmanager)
add_external_library(libvorbisfile)
add_external_library(lz4)
if(WIN32)
	add_external_library(lua)
endif()

add_include_dir(libogg_build)
add_include_dir(freetype)
add_include_dir(pr_steamworks)
add_include_dir(steam_audio)
add_include_dir(tinygltf)

add_def(DLLCLIENT_EX)
add_def(WMS_STATIC)
add_def(ALSYS_LIBRARY_TYPE)
add_def(ENGINE_CLIENT)
add_def(UIMG_ENABLE_NVTT)

if(CONFIG_ENABLE_VTF_SUPPORT)
	list(APPEND DEFINITIONS ENABLE_VMT_SUPPORT)
endif()

set(PRECOMPILED_HEADER "stdafx_client")

if(WIN32)
	add_compile_options(/bigobj)
endif()

if (CMAKE_CXX_COMPILER_ID STREQUAL "Clang")
    add_compile_options("-Wno-c++11-narrowing")
endif()

def_project(client lib)

add_dependencies(client util_vmf)

link_boost_library(client DEPENDENCY_BOOST_DATE_TIME_LIBRARY date_time)
link_boost_library(client DEPENDENCY_BOOST_REGEX_LIBRARY regex)
link_boost_library(client DEPENDENCY_BOOST_THREAD_LIBRARY thread)
link_boost_library(client DEPENDENCY_BOOST_CHRONO_LIBRARY chrono)
