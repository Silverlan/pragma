name: Build Generic Module
description: 'Build Generic Module'
inputs:
  module:
    description: 'Module name'
    required: true
  build-config:
    description: 'The build configuration to use.'
    required: true
    default: "RelWithDebInfo"
  build-args:
    description: 'Module Build arguments'
    required: true
    default: ""
  with-cuda:
    description: 'Install CUDA?'
    required: true
    default: '0'
  repository:
    description: 'Module repository name with owner.'
    required: true
    default: '${{ github.repository }}'
  ref:
    description: >
      The branch, tag or SHA to checkout. When checking out the repository that
      triggered a workflow, this defaults to the reference or SHA for that
      event.  Otherwise, uses the default branch.
  token:
    description: 'PAT token required to fetch the repository.'
    required: true
    default: ''
  debug-artifact-token:
    description: 'Token required for upload of debug artifacts (e.g. CMakeCache.txt).'
    required: true
    default: ''
outputs:
  build-dir:
    description: 'The directory where the build files are written to.'
    value: ${{ steps.set-output-vars.outputs.build-dir }}
  deps-dir:
    description: 'The directory where the dependencies are written to.'
    value: ${{ steps.set-output-vars.outputs.deps-dir }}
  install-dir:
    description: 'The directory where the installation files are written to.'
    value: ${{ steps.set-output-vars.outputs.install-dir }}
runs:
  using: "composite"
  steps:
    - name: Setup Pragma
      uses: Silverlan/pragma/github_actions/setup@main
      with:
        branch: main
        clone_url: "https://github.com/Silverlan/pragma.git"

    - name: Build Pragma
      uses: Silverlan/pragma/github_actions/build@main
      id: build-pragma
      with:
        build-args: "--with-pfm --with-all-pfm-modules --with-vr --with-lua-debugger=0"

    - name: Set Output Variables
      shell: bash
      if: always()
      id: set-output-vars
      run: |
        echo "build-dir=${{ steps.build-pragma.outputs.build-dir }}" >> $GITHUB_OUTPUT
        echo "deps-dir=${{ steps.build-pragma.outputs.deps-dir }}" >> $GITHUB_OUTPUT
        echo "install-dir=${{ steps.build-pragma.outputs.install-dir }}" >> $GITHUB_OUTPUT

    - name: Upload Debug Artifacts
      if: ${{ !cancelled() && inputs.debug-artifact-token != '' }}
      uses: Silverlan/pragma/github_actions/upload_debug_artifacts@main
      with:
        token: ${{ steps.set-token.debug_artifact_token }}
        commit: ${{ github.ref_name }}
        build-dir: '${{ steps.build-pragma.outputs.build-dir }}'
        deps-dir: '${{ steps.build-pragma.outputs.deps-dir }}'
        install-dir: '${{ steps.build-pragma.outputs.install-dir }}'
